{"ast":null,"code":"import { GET_ALL_SUCCESS, GET_ALL_FAILURE, GET_ALL_ARTICLES_SUCCESS, GET_ALL_ARTICLES_FAILURE, PUT_SUCCESS, PUT_FAILURE } from '../actions';\nexport const REQUEST_STATUS = {\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error'\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case GET_ALL_SUCCESS:\n      {\n        return { ...state,\n          records: action.records,\n          status: REQUEST_STATUS.SUCCESS\n        };\n      }\n\n    case GET_ALL_FAILURE:\n      {\n        return { ...state,\n          status: REQUEST_STATUS.ERROR,\n          error: action.error\n        };\n      }\n\n    case GET_ALL_ARTICLES_SUCCESS:\n      {\n        return { ...state,\n          records: action.records,\n          status: REQUEST_STATUS.SUCCESS\n        };\n      }\n\n    case GET_ALL_FAILURE:\n      {\n        return { ...state,\n          status: REQUEST_STATUS.ERROR,\n          error: action.error\n        };\n      }\n\n    case PUT_SUCCESS:\n      const {\n        records\n      } = state;\n      const {\n        record\n      } = action;\n      const recordIndex = records.map(rec => rec.id).indexOf(record.id);\n      return { ...state,\n        records: [...records.slice(0, recordIndex), record, ...records.slice(recordIndex + 1)]\n      };\n\n    case PUT_FAILURE:\n      return { ...state,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/flachen/Desktop/bird-app/client/src/reducers/index.js"],"names":["GET_ALL_SUCCESS","GET_ALL_FAILURE","GET_ALL_ARTICLES_SUCCESS","GET_ALL_ARTICLES_FAILURE","PUT_SUCCESS","PUT_FAILURE","REQUEST_STATUS","LOADING","SUCCESS","ERROR","reducer","state","action","type","records","status","error","record","recordIndex","map","rec","id","indexOf","slice"],"mappings":"AAAA,SACIA,eADJ,EAEIC,eAFJ,EAGIC,wBAHJ,EAIIC,wBAJJ,EAKIC,WALJ,EAMIC,WANJ,QAOS,YAPT;AASA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,OAAO,EAAE,SADiB;AAE1BC,EAAAA,OAAO,EAAE,SAFiB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAAvB;;AAMN,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKb,eAAL;AAAuB;AACvB,eAAO,EACL,GAAGW,KADE;AAELG,UAAAA,OAAO,EAAEF,MAAM,CAACE,OAFX;AAGLC,UAAAA,MAAM,EAAET,cAAc,CAACE;AAHlB,SAAP;AAKD;;AACD,SAAKP,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGU,KADE;AAELI,UAAAA,MAAM,EAAET,cAAc,CAACG,KAFlB;AAGLO,UAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHT,SAAP;AAKD;;AACC,SAAKd,wBAAL;AAAgC;AAChC,eAAO,EACL,GAAGS,KADE;AAELG,UAAAA,OAAO,EAAEF,MAAM,CAACE,OAFX;AAGLC,UAAAA,MAAM,EAAET,cAAc,CAACE;AAHlB,SAAP;AAKD;;AACD,SAAKP,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGU,KADE;AAELI,UAAAA,MAAM,EAAET,cAAc,CAACG,KAFlB;AAGLO,UAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHT,SAAP;AAKD;;AACD,SAAKZ,WAAL;AACE,YAAM;AAAEU,QAAAA;AAAF,UAAcH,KAApB;AACA,YAAM;AAAEM,QAAAA;AAAF,UAAaL,MAAnB;AACA,YAAMM,WAAW,GAAGJ,OAAO,CAACK,GAAR,CAAaC,GAAD,IAASA,GAAG,CAACC,EAAzB,EAA6BC,OAA7B,CAAqCL,MAAM,CAACI,EAA5C,CAApB;AACA,aAAO,EACL,GAAGV,KADE;AAEPG,QAAAA,OAAO,EAAE,CACP,GAAGA,OAAO,CAACS,KAAR,CAAc,CAAd,EAAiBL,WAAjB,CADI,EAEPD,MAFO,EAGP,GAAGH,OAAO,CAACS,KAAR,CAAcL,WAAW,GAAG,CAA5B,CAHI;AAFF,OAAP;;AAQF,SAAKb,WAAL;AACA,aAAO,EACL,GAAGM,KADE;AAELK,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFT,OAAP;;AAIA;AACE,aAAOL,KAAP;AA/CF;AAiDH,CAlDA;;AAoDD,eAAeD,OAAf","sourcesContent":["import {\n    GET_ALL_SUCCESS,\n    GET_ALL_FAILURE,\n    GET_ALL_ARTICLES_SUCCESS,\n    GET_ALL_ARTICLES_FAILURE,\n    PUT_SUCCESS,\n    PUT_FAILURE\n  } from '../actions';\n\nexport const REQUEST_STATUS = {\n    LOADING: 'loading',\n    SUCCESS: 'success',\n    ERROR: 'error'\n  }\n\n const reducer = (state, action) => {\n    switch(action.type) {\n      case GET_ALL_SUCCESS:  {\n      return {\n        ...state,\n        records: action.records,\n        status: REQUEST_STATUS.SUCCESS,\n      }\n    }\n    case GET_ALL_FAILURE: {\n      return {\n        ...state,\n        status: REQUEST_STATUS.ERROR,\n        error: action.error,\n      }\n    }\n      case GET_ALL_ARTICLES_SUCCESS:  {\n      return {\n        ...state,\n        records: action.records,\n        status: REQUEST_STATUS.SUCCESS,\n      }\n    }\n    case GET_ALL_FAILURE: {\n      return {\n        ...state,\n        status: REQUEST_STATUS.ERROR,\n        error: action.error,\n      }\n    }\n    case PUT_SUCCESS:\n      const { records } = state;\n      const { record } = action;\n      const recordIndex = records.map((rec) => rec.id).indexOf(record.id);\n      return {\n        ...state,\n      records: [\n        ...records.slice(0, recordIndex),\n        record,\n        ...records.slice(recordIndex + 1),\n      ],\n    };\n    case PUT_FAILURE:\n    return {\n      ...state,\n      error: action.error,\n    };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}