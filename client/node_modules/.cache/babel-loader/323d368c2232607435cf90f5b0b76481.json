{"ast":null,"code":"var _jsxFileName = \"/Users/flachen/Desktop/bird-app/client/src/components/birds/Birds.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport BirdCard from './BirdCard';\nimport { FaEarlybirds } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport { GET_ALL_SUCCESS, GET_ALL_FAILURE, PUT_SUCCESS, PUT_FAILURE } from '../../actions';\nimport reducer, { REQUEST_STATUS } from '../../reducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr);\ngrid-template-rows: repeat(4, 1fr);\n@media (max-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n`;\n_c = Grid;\nconst IconInfo = styled.div`\ntext-align: center;\n`;\n_c2 = IconInfo;\n\nconst Birds = () => {\n  _s();\n\n  const onToggleHandler = async birdData => {\n    try {\n      const toggledBirdData = { ...birdData,\n        isSeen: !birdData.isSeen\n      };\n      await axios.put(`api/birds/${birdData.id}`, toggledBirdData);\n      dispatch({\n        type: PUT_SUCCESS,\n        record: toggledBirdData\n      });\n    } catch (e) {\n      dispatch({\n        type: PUT_FAILURE,\n        error: e\n      });\n    }\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [{\n    records: birds,\n    status\n  }, dispatch] = useReducer(reducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('api/birds/');\n        console.log(response);\n        dispatch({\n          records: response.data,\n          type: GET_ALL_SUCCESS\n        });\n      } catch (e) {\n        dispatch({\n          status: REQUEST_STATUS.ERROR,\n          type: GET_ALL_FAILURE\n        }); // setError(e)\n      }\n    };\n\n    fetchData();\n  }, []);\n  const success = status === REQUEST_STATUS.SUCCESS;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  const hasErrored = status === REQUEST_STATUS.ERROR;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconInfo, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Press the \", /*#__PURE__*/_jsxDEV(FaEarlybirds, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 27\n        }, this), \" if you know withing you that you have seen that bird!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }, this), success && /*#__PURE__*/_jsxDEV(Grid, {\n      children: birds.filter(rec => {\n        const targetTerm = `${rec.name}`.toLowerCase();\n        return searchTerm.length === 0 ? true : targetTerm.includes(searchTerm.toLowerCase());\n      }).map(bird => /*#__PURE__*/_jsxDEV(BirdCard, { ...bird,\n        onToggleHandler: () => onToggleHandler(bird)\n      }, bird.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Birds, \"LzvrsWcMjtSKHlhlIh8iQBsqpHk=\");\n\n_c3 = Birds;\nexport default Birds;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"IconInfo\");\n$RefreshReg$(_c3, \"Birds\");","map":{"version":3,"sources":["/Users/flachen/Desktop/bird-app/client/src/components/birds/Birds.js"],"names":["React","Fragment","useState","useEffect","useReducer","axios","SearchBar","BirdCard","FaEarlybirds","styled","GET_ALL_SUCCESS","GET_ALL_FAILURE","PUT_SUCCESS","PUT_FAILURE","reducer","REQUEST_STATUS","Grid","div","IconInfo","Birds","onToggleHandler","birdData","toggledBirdData","isSeen","put","id","dispatch","type","record","e","error","searchTerm","setSearchTerm","records","birds","status","LOADING","fetchData","response","get","console","log","data","ERROR","success","SUCCESS","isLoading","hasErrored","filter","rec","targetTerm","name","toLowerCase","length","includes","map","bird"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect, useReducer} from 'react'\nimport axios from 'axios'\n\n\nimport SearchBar from './SearchBar'\nimport BirdCard from './BirdCard'\n\nimport {FaEarlybirds} from 'react-icons/fa'\n\nimport styled from 'styled-components';\n\nimport {\n  GET_ALL_SUCCESS,\n  GET_ALL_FAILURE,\n  PUT_SUCCESS,\n  PUT_FAILURE\n} from '../../actions';\n\n\nimport reducer, { REQUEST_STATUS } from '../../reducers'\n\nconst Grid = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr);\ngrid-template-rows: repeat(4, 1fr);\n@media (max-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n`\n\nconst IconInfo = styled.div`\ntext-align: center;\n`\n\nconst Birds = () => {\n\n  const onToggleHandler = async(birdData) => {\n    try {\n      const toggledBirdData = {\n        ...birdData,\n        isSeen: !birdData.isSeen\n      }\n      await axios.put(\n        `api/birds/${birdData.id}`,\n        toggledBirdData,\n      );\n      dispatch({\n        type: PUT_SUCCESS,\n        record: toggledBirdData\n      })\n    } catch (e) {\n      dispatch({\n        type: PUT_FAILURE,\n        error: e,\n      });\n    }\n  }\n\nconst [searchTerm, setSearchTerm] = useState(\"\")\n\n    const [{records: birds, status}, dispatch] = useReducer(reducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null\n  })\n \n  \n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const response = await axios.get('api/birds/');\n            console.log(response)\n            dispatch({\n              records: response.data,\n              type: GET_ALL_SUCCESS\n            });\n          \n          } catch (e) {\n            dispatch({\n              status: REQUEST_STATUS.ERROR,\n              type: GET_ALL_FAILURE\n            })\n            // setError(e)\n          }\n        };\n        fetchData();\n      }, []);\n\n      const success = status === REQUEST_STATUS.SUCCESS\n      const isLoading = status === REQUEST_STATUS.LOADING\n      const hasErrored = status === REQUEST_STATUS.ERROR\n\n    return (\n        <Fragment>\n            <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n            <IconInfo>\n            <h3>Press the <FaEarlybirds/> if you know withing you that you have seen that bird!</h3>    \n            </IconInfo> \n            {isLoading && <div>Loading...</div>}\n            {success && (\n        <Grid>\n            {birds.filter((rec)=> {\n                const targetTerm = `${rec.name}`.toLowerCase();\n                return searchTerm.length === 0 ? true : targetTerm.includes(searchTerm.toLowerCase())\n            })\n            .map((bird) => <BirdCard key={bird.id} {...bird}\n            onToggleHandler={() => onToggleHandler(bird)}/>)}\n        </Grid>\n        )}\n        </Fragment>\n    )\n}\n\nexport default Birds\n"]},"metadata":{},"sourceType":"module"}